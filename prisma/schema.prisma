generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Brand {
  id        String    @id @default(cuid())
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model Category {
  id        String    @id @default(cuid())
  slug      String    @unique
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model Product {
  id            String         @id @default(cuid())
  sku           String         @unique
  name          String
  description   String
  priceCents    Int
  brandId       String?
  categoryId    String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  deletedAt     DateTime?
  cartLines     CartLine[]
  category      Category?      @relation(fields: [categoryId], references: [id])
  brand         Brand?         @relation(fields: [brandId], references: [id])
  images        ProductImage[]
  sizes         SizeVariant[]
  wishlistItems WishlistItem[]

  @@index([categoryId])
  @@index([brandId])
  @@index([deletedAt])
}

model ProductImage {
  id        String   @id @default(cuid())
  productId String
  url       String
  alt       String?
  position  Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@index([productId])
}

model SizeVariant {
  id        String   @id @default(cuid())
  productId String
  label     String
  stock     Int      @default(100)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([productId, label])
  @@index([productId])
}

model User {
  id           String    @id @default(cuid())
  email        String    @unique
  passwordHash String
  name         String?
  isAdmin      Boolean   @default(false)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  cart         Cart?
  wishlist     Wishlist?
}

model Cart {
  id        String     @id @default(cuid())
  userId    String?    @unique
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  user      User?      @relation(fields: [userId], references: [id])
  lines     CartLine[]
}

model CartLine {
  id                 String   @id @default(cuid())
  cartId             String
  productId          String
  size               String?
  qty                Int      @default(1)
  priceCentsSnapshot Int
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  product            Product  @relation(fields: [productId], references: [id])
  cart               Cart     @relation(fields: [cartId], references: [id], onDelete: Cascade)

  @@unique([cartId, productId, size])
  @@index([productId])
}

model Wishlist {
  id        String         @id @default(cuid())
  userId    String?        @unique
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  user      User?          @relation(fields: [userId], references: [id])
  items     WishlistItem[]
}

model WishlistItem {
  id         String   @id @default(cuid())
  wishlistId String
  productId  String
  size       String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  product    Product  @relation(fields: [productId], references: [id])
  wishlist   Wishlist @relation(fields: [wishlistId], references: [id], onDelete: Cascade)

  @@unique([wishlistId, productId, size])
  @@index([productId])
}
